# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""Return type for `programAssignUser` mutation."""
type AssignUserProgramPayload {
  """The program returned from the mutation."""
  program: Program

  """The list of errors that occurred from executing the mutation."""
  userErrors: [UserError!]!
}

"""Specifies the fields for creating a new program."""
input CreateProgramInput {
  """Specifies an abbreviation for the program, e.g. FSF."""
  abbreviation: String!

  """Specifies the name of the program, e.g. Full Stack Flex"""
  name: String!
}

"""Return type for `programCreate` mutation."""
type CreateProgramPayload {
  """The program returned from the mutation."""
  program: Program

  """The list of errors that occurred from executing the mutation."""
  userErrors: [UserError!]!
}

"""Specifies the fields for creating a new shift."""
input CreateShiftInput {
  """Specifies the program that this shift will be attached to."""
  programId: ID!

  """Specifies the user that will work this shift, if any."""
  userId: ID

  """Specifies the array of workdays that this shift will be active."""
  workdays: [Workdays!]!
}

"""Return type for `shiftCreate` mutation."""
type CreateShiftPayload {
  """The shift returned from the mutation."""
  shift: Shift

  """The list of errors that occurred from executing the mutation."""
  userErrors: [UserError!]!
}

"""Specifies the fields for creating a new user."""
input CreateUserInput {
  """The user's email address."""
  emailAddress: String!

  """The user's first name."""
  firstName: String

  """The user's last name."""
  lastName: String

  """The user's role level. Defaults to "Learning Assistant"."""
  roleLevel: Int = 1
}

"""Return type for `userCreate` mutation."""
type CreateUserPayload {
  """The user returned from the mutation."""
  user: User

  """The list of errors that occurred from executing the mutation."""
  userErrors: [UserError!]!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""Return type for `userElevateRole` mutation."""
type ElevateUserRolePayload {
  """The user returned from the mutation."""
  user: User

  """The list of errors that occurred from executing the mutation."""
  userErrors: [UserError!]!
}

type Mutation {
  """Assigns a user to a program, if they are not already assigned."""
  programAssignUser(
    """Specifies the program that the user will be assigned to."""
    programId: ID!

    """Specifies the user that will be assigned."""
    userId: ID!
  ): AssignUserProgramPayload!

  """Creates a new program."""
  programCreate(input: CreateProgramInput!): CreateProgramPayload!

  """Creates a new shift."""
  shiftCreate(input: CreateShiftInput!): CreateShiftPayload!

  """Creates a new user."""
  userCreate(input: CreateUserInput!): CreateUserPayload!

  """Elevates a user's role type to the specified role level."""
  userElevateRole(
    """Specifies the level to set the user to."""
    level: Int!

    """Specifies the user whose permission will get elevated."""
    userId: ID!
  ): ElevateUserRolePayload!
}

interface Node {
  """The DateTime that the node was created, in ISO 8601 format."""
  createdDate: DateTime!

  """A globally-unique identifier."""
  id: ID!

  """The DateTime that the node was last updated, in ISO 8601 format."""
  updatedDate: DateTime!
}

type Program implements Node {
  """The program's abbreviation, e.g. FSF."""
  abbreviation: String!

  """The DateTime that the node was created, in ISO 8601 format."""
  createdDate: DateTime!

  """A globally-unique identifier."""
  id: ID!

  """The program's name, e.g. Full Stack Flex."""
  name: String!

  """The DateTime that the node was last updated, in ISO 8601 format."""
  updatedDate: DateTime!

  """Array of users that have been assigned to the program."""
  users: [User!]
}

type Query {
  """
  Returns a User entity for who is currently authenticated via JWT token.
  """
  me: User

  """Returns a Program entity by ID."""
  program(
    """Specifies the ID of the program to return."""
    id: ID!
  ): Program!

  """Returns an array of user role types that can be used."""
  userRoleTypes: [RoleType!]!
}

type RoleType {
  """The role's permission level, expressed as an integer."""
  level: Int!

  """The role's name, e.g. Learning Assistant."""
  name: String!
}

type Shift implements Node {
  """The DateTime that the node was created, in ISO 8601 format."""
  createdDate: DateTime!

  """A globally-unique identifier."""
  id: ID!

  """The program that has been assigned to this shift."""
  program: Program!

  """The DateTime that the node was last updated, in ISO 8601 format."""
  updatedDate: DateTime!

  """The user that has been assigned to this shift, if any."""
  user: User

  """Array of workdays assigned to this shift."""
  workdays: [Workdays!]!
}

type User implements Node {
  """The DateTime that the node was created, in ISO 8601 format."""
  createdDate: DateTime!

  """The user's email address, fetched from Google."""
  emailAddress: String!

  """The user's first (given) name, if specified."""
  firstName: String

  """The user's Google ID"""
  googleId: String

  """A globally-unique identifier."""
  id: ID!

  """The user's last (family) name, if specified."""
  lastName: String

  """The program the user is assigned to, if any."""
  program: Program

  """The user's current authorization level."""
  roleType: RoleType!

  """The DateTime that the node was last updated, in ISO 8601 format."""
  updatedDate: DateTime!
}

"""Represents an error in the input of a mutation."""
type UserError {
  """The path to the input field that caused the error."""
  field: [String!]

  """The error message."""
  message: String!
}

"""Possible workdays that can be assigned to a shift."""
enum Workdays {
  FRIDAY
  MONDAY
  SATURDAY
  SUNDAY
  THURSDAY
  TUESDAY
  WEDNESDAY
}
